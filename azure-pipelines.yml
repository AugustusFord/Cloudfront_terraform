# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
# TFSec Security Scanner
- stage:
  displayName: Security Scanning
  jobs:
  - job:
    displayName: TFSec Scanning
    steps:
    - task: tfsec@1
      inputs:
        version: 'v1.26.0'
        dir: './'
# Terraform 
- stage:
  displayName: Terraform Deployment
  jobs:
  - job: TerraformDeployment
    displayName: Terraform Deployment
    steps:
    # Install terraform to agent
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'
      displayName: 'Install terraform'
    # terraform init
    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'init'
        backendServiceAWS: '(Cloudfront_Terraform)AWS_for_terrafrom'
        backendAWSBucketName: 'ohbster-ado-terraform-class5'
        backendAWSKey: 'cloudfront/terraform.tfstate'
      displayName: 'Initialize terraform'
    # terraform apply --auto-approve
    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'apply'
        commandOptions: '--auto-approve'
        environmentServiceNameAWS: '(Cloudfront_Terraform)AWS_for_terrafrom'
      displayName: 'Apply terraform'
    
    # Artifacts
    # This bash step will retrieve the values of the distribution_id and bucket_name from the terraform deployment output
    # and save it to a file to be used in the frontend deployment
    - bash: |
        echo $(terraform show --json | jq -r '.values.outputs.bucket_name.value')> $(Build.ArtifactStagingDirectory)/bucket.env
        echo $(terraform show --json | jq -r '.values.outputs.distribution_id.value')> $(Build.ArtifactStagingDirectory)/pipeline.env
      name: GetValues
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'variables'
        publishLocation: 'Container'
   
